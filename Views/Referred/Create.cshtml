@model CareLab.Models.Referred

@{
    Layout = null;
}

<body>
    @using (Html.BeginForm("Create", "Referred", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Add Referred</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Office, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Office, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Office, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.NMCno, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.NMCno, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NMCno, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Entrydate, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Entrydate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Entrydate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Doctorname, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Doctorname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Doctorname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Hospitalname, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Hospitalname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Hospitalname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Specilist, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Specilist, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Specilist, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
    }

</body>

